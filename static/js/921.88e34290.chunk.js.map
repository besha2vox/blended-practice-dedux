{"version":3,"file":"static/js/921.88e34290.chunk.js","mappings":"6MAQA,EARe,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,mBACtB,OACE,mBAAQC,QAASD,EAAoBE,KAAK,SAA1C,SACGH,GAGN,E,sECDKI,EAAOC,EAAAA,GAAAA,GAAH,2DAKJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uHA2Bd,EAjBkB,WAChB,IAAMG,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGI,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACT,yBACE,SAACT,EAAD,CAAUU,GAAID,EAAIE,MAAO,CAAEC,KAAMP,GAAjC,SACGG,KAFIC,EADA,KAShB,ECoBD,EA9CkB,WAChB,OAAsCI,EAAAA,EAAAA,UAAS,WAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYjB,EAAAA,EAAAA,IAAYkB,EAAAA,IAwB9B,OACE,4BACIL,IACA,SAAC,EAAD,CAAQtB,KAAK,aAAaC,mBAzBd,WAChBsB,GAAe,GACfC,GAASI,EAAAA,EAAAA,MACV,IAwBIN,IAAgBI,IACf,iCACE,mBAAQxB,QAxBc,WAC5B,OAAQkB,GACN,IAAK,UAML,IAAK,qBACHC,EAAe,sBACf,MALF,IAAK,qBACHA,EAAe,sBACf,MAKF,QACE,OAAOD,EAEZ,EAS+CjB,KAAK,SAA7C,SACmB,YAAhBiB,EAA4B,qBAAuBA,KAEtD,SAAC,EAAD,SAKT,C,uGCrDM,IAAMV,EAAc,SAAAO,GAAK,OAAIA,EAAMT,MAAMqB,KAAhB,EAEnBF,EAAkB,SAAAV,GAAK,OAAIA,EAAMT,MAAMkB,SAAhB,EAEvBI,EAAoB,SAAAb,GAAK,OAAIA,EAAMT,MAAMuB,WAAhB,C","sources":["components/Button/Button.jsx","components/UsersList/UsersList.jsx","page/UsersPage/UsersPage.jsx","redux/selectors.js"],"sourcesContent":["const Button = ({ text, handlerButtonClick }) => {\n  return (\n    <button onClick={handlerButtonClick} type=\"button\">\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useSelector } from 'react-redux';\nimport { selectUsers } from 'redux/selectors';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n`;\n\nconst UserLink = styled(Link)`\n  text-decoration: none;\n  color: #2e2e2e;\n\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n\nconst UsersList = () => {\n  const users = useSelector(selectUsers);\n  const location = useLocation();\n\n  return (\n    <List>\n      {users.map(({ name, id }) => (\n        <li key={id}>\n          <UserLink to={id} state={{ from: location }}>\n            {name}\n          </UserLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default UsersList;\n","import Button from 'components/Button/Button';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\n// import { selectUsers } from 'redux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { fetchUsers } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport UsersList from 'components/UsersList/UsersList';\n\nconst UsersPage = () => {\n  const [filterOrder, setFilterOrder] = useState('default');\n  // const users = useSelector(selectUsers);\n  const [isUsersShow, setIsUsersShow] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const showUsers = () => {\n    setIsUsersShow(true);\n    dispatch(fetchUsers());\n  };\n\n  const filterBtnClickHandler = () => {\n    switch (filterOrder) {\n      case 'default':\n        setFilterOrder('Filter from Z to A');\n        break;\n      case 'Filter from Z to A':\n        setFilterOrder('Filter from A to Z');\n        break;\n      case 'Filter from A to Z':\n        setFilterOrder('Filter from Z to A');\n        break;\n\n      default:\n        return filterOrder;\n    }\n  };\n\n  return (\n    <div>\n      {!isUsersShow && (\n        <Button text=\"show users\" handlerButtonClick={showUsers} />\n      )}\n      {isUsersShow && !isLoading && (\n        <>\n          <button onClick={filterBtnClickHandler} type=\"button\">\n            {filterOrder === 'default' ? 'Filter from A to Z' : filterOrder}\n          </button>\n          <UsersList />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UsersPage;\n","export const selectUsers = state => state.users.items;\n\nexport const selectIsLoading = state => state.users.isLoading;\n\nexport const selectCurrentUser = state => state.users.currentUser;\n"],"names":["text","handlerButtonClick","onClick","type","List","styled","UserLink","Link","users","useSelector","selectUsers","location","useLocation","map","name","id","to","state","from","useState","filterOrder","setFilterOrder","isUsersShow","setIsUsersShow","dispatch","useDispatch","isLoading","selectIsLoading","fetchUsers","items","selectCurrentUser","currentUser"],"sourceRoot":""}